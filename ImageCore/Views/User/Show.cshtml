@{
    Layout = "_Layout";
}
@using Microsoft.AspNetCore.Routing
@using Microsoft.AspNetCore.Http
@model ImageCore.Models.ViewModel.User.UserViewModel;

<div class="userWrapper">
    <div class="user">
        <div class="userImage"></div>
        <div class="userDescription">
            <div class="userInformation">
                <h1>@Model.Username</h1>
                <ul>
                    <li>Information 1</li>
                    <li>Information 2</li>
                    <li>Information 3</li>
                </ul>
            </div>
            <div class="userActions">
                @if (!Model.isUser)
                {
                    if (Model.isContact)
                    {
                        <button id="contactEdit" onclick="fetchConctact('@ViewData["contactAddUrl"]','DELETE')">
                            Kontakt Entfernen
                        </button>
                    }
                    else
                    {
                        <button id="contactEdit" onclick="fetchConctact('@ViewData["contactAddUrl"]','POST')">
                            Kontakt hinzufügen
                        </button>
                    }
                }
                <button onclick="getProjects(`@Url.Action("GetProjects", "Project", new {userId = Model.UserId}, ViewData["RequestScheme"].ToString())`)">Zu Projekt hinzufügen</button>
                <button>Action 3</button>
                <button>Action 4</button>
            </div>
        </div>
    </div>
    <div class="projectList">
        <div class="projectListEntry">
            <img src="~/images/Abstract-Background-Best-Wallpaper-14092.jpg">
            <div class="projectListEntryText">
                <p>Projektname</p>
                <div class="projectEntryInformation">
                    <div class="viewIcon"></div>
                    <p>5</p>
                    <div class="userIcon"></div>
                    <p>5</p>
                </div>
            </div>
        </div>
        <div class="projectListEntry">
            <img src="~/images/Abstract-Background-Best-Wallpaper-14092.jpg">
            <div class="projectListEntryText">
                <p>Projektname</p>
                <div class="projectEntryInformation">
                    <div class="viewIcon"></div>
                    <p>5</p>
                    <div class="userIcon"></div>
                    <p>5</p>
                </div>
            </div>
        </div>
        <div class="projectListEntry">
            <img src="~/images/Abstract-Background-Best-Wallpaper-14092.jpg">
            <div class="projectListEntryText">
                <p>Projektname</p>
                <div class="projectEntryInformation">
                    <div class="viewIcon"></div>
                    <p>5</p>
                    <div class="userIcon"></div>
                    <p>5</p>
                </div>
            </div>
        </div>
        <div class="projectListEntry">
            <img src="~/images/Abstract-Background-Best-Wallpaper-14092.jpg">
            <div class="projectListEntryText">
                <p>Projektname</p>
                <div class="projectEntryInformation">
                    <div class="viewIcon"></div>
                    <p>5</p>
                    <div class="userIcon"></div>
                    <p>5</p>
                </div>
            </div>
        </div>
        <div class="projectListEntry">
            <img src="~/images/Abstract-Background-Best-Wallpaper-14092.jpg">
            <div class="projectListEntryText">
                <p>Projektname</p>
                <div class="projectEntryInformation">
                    <div class="viewIcon"></div>
                    <p>5</p>
                    <div class="userIcon"></div>
                    <p>5</p>
                </div>
            </div>
        </div>
        <div class="projectListEntry">
            <img src="~/images/Abstract-Background-Best-Wallpaper-14092.jpg">
            <div class="projectListEntryText">
                <p>Projektname</p>
                <div class="projectEntryInformation">
                    <div class="viewIcon"></div>
                    <p>5</p>
                    <div class="userIcon"></div>
                    <p>5</p>
                </div>
            </div>
        </div>
    </div>
    <template>
        <div class="modalWindowConfirmWrapper" id="ModalWindow">
            <div class="modalWindowConfirm">
                <h1>Add User to Project</h1>
                <select id="projectSelection"></select>
                <div class="modalWindowBtnWrapper">
                    <button onclick="addUserToProject(`@Url.Action("Store","ProjectParticipator", new {UserId = Model.UserId}, ViewData["RequestScheme"].ToString())`)"
                            id="addUserToProjectBtn">Hinzufügen</button>
                    <button id="cancelProjectBtn" onclick="this.parentNode.parentNode.parentElement.remove()">Cancel</button>
                </div>
            </div>
        </div>
    </template>
</div>

<script>
    function fetchConctact(url,methodType)
    {
        fetch(url,{method: methodType})
        .then(res => res.json())
        .then(res => {
             if (res)
             {
                 let contactbtn = document.getElementById("contactEdit");
                 console.log(res);
                 contactbtn.innerText = contactbtn.innerText === "Kontakt hinzufügen" 
                 ?  "Kontakt entfernen" 
                 : "Kontakt hinzufügen"
                 let method = methodType === "POST" ? "DELETE" : "POST";
                 contactbtn.setAttribute('onclick',`fetchConctact('${res}','${method}')`);
             }    
        });
    }
    
    function getProjects(url)
    {
        fetch(url)
                .then(res => res.json())
                .then(res => {
                     if (res)
                     {
                         let template = document.getElementsByTagName("template")[0].content.cloneNode(true);
                         let wrapper = template.children[0];
                          document.body.appendChild(wrapper);
                         let projectDropdown = document.getElementById("projectSelection");
                         for (let x = 0; x < res.length; x++)
                         {
                               let option = document.createElement("option");
                               option.value = res[x].projectId;
                               option.innerHTML = res[x].projectName;
                               projectDropdown.appendChild(option);
                         }
                     }    
                });
    }

    function addUserToProject(url)
    {
        let projectId = document.getElementById("projectSelection").value;
        fetch(url + "&projectId=" +projectId,{method: "POST"})
        .then(res => {
             if (res.status === 200)
             {
                 document.getElementById("ModalWindow").remove();
             }    
        }); 
    }
</script>