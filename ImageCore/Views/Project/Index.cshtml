@{
    Layout = "_Layout";
}
@model ImageCore.Models.ViewModel.ProjectViewModel

<div class="project">
    <div class="projectHeader">
        <ul>
            <li>
                <a asp-controller="Project" asp-action="Index">Meine Projekte</a>
            </li>
            <li><a asp-controller="Project" asp-action="Shared">Geteilte Projekte</a></li>
            <li>
                <a asp-controller="Project" asp-action="Create">Neues Projekt</a>
            </li>
        </ul>
        <button onclick="deleteElement()">Entfernen</button>
        <input class="searchInput" type="text" placeholder="Search for Project">
    </div>
    <div class="projectList">
        @for(int x = 0; x < Model.Projectname.Count(); x++)
        {
            <div class="projectListEntry" onclick="selectElement(this)" ondblclick="window.location.href = `@Url.Action("Show", "Project", new {projectId = Model?.ProjectIds[x]}, ViewData["RequestScheme"].ToString())`">
                <img src="images/Abstract-Background-Best-Wallpaper-14092.jpg">
                <div class="projectListEntryText">
                    <p>@Model.Projectname[x]</p>
                    <div class="projectEntryInformation">
                        <div class="viewIcon"></div>
                        <p>5</p>
                        <div class="userIcon"></div>
                        <p>5</p>
                    </div>
                </div>
                <a href="@Url.Action("Destroy", "Project", new {projectId = Model?.ProjectIds[x]}, ViewData["RequestScheme"].ToString())" style="display: none"></a>
            </div>
        }
        <template>
            <div class="modalWindowConfirmWrapper" id="projectModalWindow">
                <div class="modalWindowConfirm">
                    <h1>Do you really want to delete this Project?</h1>
                    <div class="modalWindowBtnWrapper">
                        <button id="deleteProjectBtn">Delete</button>
                        <button id="cancelProjectBtn" onclick="this.parentNode.parentNode.parentElement.remove()">Cancel</button>
                    </div>
                </div>
            </div>
        </template>
    </div>
</div>

<script>

let currentlySelectElement;

function deleteElement()
{
    console.log("test");
    let template = document.getElementsByTagName("template")[0].content.cloneNode(true);
    let wrapper = template.children[0];
    document.body.appendChild(wrapper);
    wrapper.style.display = "block";
    let deleteBtn = wrapper.children[0].children[1].children[0];
    console.log(deleteBtn);
    console.log( deleteBtn.nextElementSibling);
    deleteBtn.addEventListener('click',() => {
        fetch(currentlySelectElement.lastElementChild.href)
            .then(res => {
                if (res.status === 200)
                {
                    document.getElementById("cancelProjectBtn").click();
                    if (currentlySelectElement) currentlySelectElement.remove();        
                    currentlySelectElement = "";
                }
            });
    }); 
    
    
}

function selectElement(element)
{ 
    if (currentlySelectElement) currentlySelectElement.style.border = "none";
    element.style.border = "2px solid blue";
    currentlySelectElement = element;
}

</script>
