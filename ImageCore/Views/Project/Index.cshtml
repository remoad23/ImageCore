@{
    Layout = "_Layout";
}
@model ImageCore.Models.ViewModel.ProjectViewModel

<div class="project">
    <div class="projectHeader">
        <ul>
            <li>
                <a asp-controller="Project" asp-action="Index">Meine Projekte</a>
            </li>
            <li><a asp-controller="Project" asp-action="Shared">Geteilte Projekte</a></li>
            <li>
                <a asp-controller="Project" asp-action="Create">Neues Projekt</a>
            </li>
        </ul>
      <!--  <button onclick="deleteElement()" class="DeleteBtn" style="border: none;background-color: transparent"></button> -->
        <input class="searchInput" type="text" placeholder="Search for Project" id="projectSearchBar">
    </div>
    <div class="projectList">
        @for(int x = 0; x < Model.Projectname.Count(); x++)
        {
            <div class="projectListEntry" onclick="selectElement(this)">
                <div class="projectListEntryImageWrapper">
                    <div class="projectListEntryInteractionList">
                        <div class="projectlistEntryInteraction viewIcon" onclick="window.location.href = `@Url.Action("Show", "Project", new {projectId = Model?.ProjectIds[x]}, ViewData["RequestScheme"].ToString())`"></div>
                        <div onclick='deleteElement(this.parentElement.parentElement.parentElement,`@Url.Action("Destroy", "Project", new {projectId = Model?.ProjectIds[x]}, ViewData["RequestScheme"].ToString())`)'
                            class="projectlistEntryInteraction DeleteBtn" style="margin-left: 15px;margin-right: 20px;"></div>
                    </div>
                    <p class="firstLetterProject">@Model.Projectname[x][0]</p>
                </div>
                
                <div class="projectListEntryText">
                    <p>@Model.Projectname[x]</p>
                    <div class="projectEntryInformation">
                        <div class="viewIcon"></div>
                        <p>@Model.ProjectViews[x]</p>
                        <div class="userIcon"></div>
                        <p>@Model.ParticipatorCounts[x]</p>
                    </div>
                </div>
                <a href="@Url.Action("Destroy", "Project", new {projectId = Model?.ProjectIds[x]}, ViewData["RequestScheme"].ToString())" style="display: none"></a>
            </div>
        }
        <template>
            <div class="modalWindowConfirmWrapper" id="projectModalWindow">
                <div class="modalWindowConfirm">
                    <h1>Do you really want to delete this Project?</h1>
                    <div class="modalWindowBtnWrapper">
                        <button id="deleteProjectBtn">Delete</button>
                        <button id="cancelProjectBtn" onclick="this.parentNode.parentNode.parentElement.remove()">Cancel</button>
                    </div>
                </div>
            </div>
        </template>
    </div>
</div>

<script>

let currentlySelectElement;

function deleteElement(element,url)
{
    let template = document.getElementsByTagName("template")[0].content.cloneNode(true);
    let wrapper = template.children[0];
    document.body.appendChild(wrapper);
    wrapper.style.display = "block";
    let deleteBtn = wrapper.children[0].children[1].children[0];
    
    deleteBtn.addEventListener('click',() => {
        fetch(url)
            .then(res => {
                if (res.status === 200)
                {
                    document.getElementById("cancelProjectBtn").click();
                    element.remove();        
                    currentlySelectElement = "";
                }
            });
    }); 
}

function selectElement(element)
{ 
  //  if (currentlySelectElement) currentlySelectElement.style.backgroundColor = "#2b6777";
//    element.style.backgroundColor = "#52ab98";
    currentlySelectElement = element;
}

 document.getElementById("projectSearchBar").addEventListener("keyup",() =>{
        if (event.keyCode === 13) {
           let query =  document.getElementById("projectSearchBar").value;
           window.location.href = 
           `@Url.Action("QueryProjects", "Project", new {query = ""}, ViewData["RequestScheme"].ToString())` + "?query=" + query;
        }
    });

</script>
