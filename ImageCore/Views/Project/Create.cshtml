@{
    Layout = "_Layout";
}
@model ImageCore.Models.ViewModel.ProjectStoreViewModel

<div class="project">
    <div class="projectHeader">
        <ul>
            <li>
                <a asp-controller="Project" asp-action="Index">Meine Projekte</a>
            </li>
            <li><a asp-controller="Project" asp-action="Shared">Geteilte Projekte</a></li>
            <li>
                <a asp-controller="Project" asp-action="Create">Neues Projekt</a>
            </li>
        </ul>
    </div>
    <div class="projectList">
        <form asp-controller="Project" class="projectCreateForm" asp-action="Store" method="POST">
            @if (!Context.Request.Query["projectCreated"].ToString().Equals(""))
            {
                <p>Projekt wurde erfolgreich erstellt</p>
            }
            <h1>Projekt erstellen</h1>
            <label>Projektname</label>
            <input asp-for="ProjectName" type="text" name="projectname">
            <span class="warningText" asp-validation-for="ProjectName"></span>
            <label>Projektgröße</label>
            <div class="projectSizeWrapper">
                <input asp-for="Width" type="text" placeholder="breite" id="width" name="width">
                <input asp-for="Height" type="text" placeholder="höhe" id="height" name="height">
                <select onchange="changeResolution(this)" class="resolutionDropdown">
                    <option value="3840x2160">4K (3840 x 2160)</option>
                    <option value="2048x1152">2K (2048 x 1152)</option>
                    <option value="1920x1080">Full HD (1920 x 1080)</option>
                    <option value="1280x720">HD (1280 x 720)</option>
                </select>
                <br>
                <span class="warningText" asp-validation-for="Width"></span>
                <span class="warningText" asp-validation-for="Height"></span>
            </div>
            <label>Kontakte einladen</label>
            <div class="inviteUserBarRecommendation">
                <input autocomplete="off" type="text" id="inviteUserBar">
                <ul id="recommendedUserList">

                </ul>
            </div>
            <div class="invitedContactsField" id="contactField">
                <template>
                    <div class="invitedContacts">
                        <input type="hidden" class="invitedContact" value="Invited User" name="UserIds[]">
                        <p>Username</p>
                        <div class="cancelInvitedUser" onclick="deleteInvitedUser(this.parentNode)">X</div>
                    </div>
                </template>
            </div>
            <button class="submitCreateProjectBtn">Erstellen</button>
        </form>
    </div>
</div>

<script>

function deleteInvitedUser(contactField)
{
    contactField.remove()
}

function changeResolution(element)
{
    let x,y;
    let res = element.value.split("x");
    [x, y] = [res[0],res[1]];
    document.getElementById("height").value = y;
    document.getElementById("width").value = x;
}

function addInvitedUser(username,id)
{
    document.getElementById("recommendedUserList").style.display = "none";
    let template = document.getElementsByTagName("template")[0].content.cloneNode(true);
    let contact = template.children[0];
    document.getElementById("inviteUserBar").value = "";
    contact.children[0].value = id;
    contact.children[1].innerText = username;
    document.getElementById("contactField").appendChild(contact);
    document.getElementById("recommendedUserList").innerHTML = "";
}

 document.getElementById("inviteUserBar").addEventListener("input",() =>
 {
       event.preventDefault();
       event.stopPropagation();
       getContact(`@Url.Action("QueryContacts", "Contact", new {contactId = ""}, ViewData["RequestScheme"].ToString())`)
 });

 document.querySelector("body").addEventListener("click",() =>
 {
    document.getElementById("recommendedUserList").innerHTML = "";
 });

function getContact(url)
{
    document.getElementById("recommendedUserList").innerHTML = "";
    let queriedUser = "?query=" + document.getElementById("inviteUserBar").value;
    fetch(url+queriedUser)
        .then(res => res.json())
        .then(res => {
             
            let Ids = res["UserIds"];
            let UserNames = res["UserNames"];
 
             for(let x = 0; x < UserNames.length; x++)
             {
                 let userList = document.getElementById("recommendedUserList");
                 let li = document.createElement("li");
                 let p = document.createElement("p");
                 let input = document.createElement("input");
                 input.type = "hidden";
                 
                 li.addEventListener('click',() => addInvitedUser(UserNames[x],Ids[x]));
                 
                 p.innerHTML = UserNames[x];
                 input.value = Ids[x];
                 
                 li.appendChild(p);
                 li.appendChild(input);
                 
                 userList.appendChild(li);
                 
                 userList.style.display = "block";
             }
        });
}

</script>