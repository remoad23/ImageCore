@{
    Layout = "_Layout";
}
@using ImageCore.Models.ViewModel
@model List<ImageCore.Models.ViewModel.ProjectListViewModel>

<div class="UserListWrapper">
    <div class="UserListHeader">
        <div class="userListHeaderUpper">
            <h1>Projekte</h1>
        </div>
        <div class="UserListHeaderLower">
            <input type="text" placeholder="suchen" id="lookForUser">
            <div class="filterOptionWrapper">
                <div class="filterOption">
                    <select id="userOrdering">
                        <option value="ascend">Aufsteigend</option>
                        <option value="descend">Absteigend</option>
                    </select>
                </div>
            </div>
        </div>
    </div>
    <div class="UserListList">
        @if (TempData["interactionstatus"] is not null)
        {
            <p>@TempData["interactionstatus"] TEST</p>
        }
        <div class="UserListEntry UserListEntryHeader">
            <div class="userEntryImage"></div>
            <div class="UserEntryVerticalWrapper">
                <p class="userEntryHeader userEntryHeaderHeader">Name</p>
            </div>
            <div class="UserEntryVerticalWrapper">
                <p class="userEntryHeader userEntryHeaderHeader">Besitzer</p>
            </div>
            <div class="UserEntryVerticalWrapper">
                <p class="userEntryHeader userEntryHeaderHeader">Participators</p>
            </div>
        </div>
        @foreach (ProjectListViewModel project in Model)
        {
            <a class="UserListEntry" ondblclick="window.location.href = `@Url.Action("Show", "Project", new {projectId = project.ProjectId}, ViewData["RequestScheme"].ToString())`">
                <img class="userEntryImage" src="~/images/Abstract-Background-Best-Wallpaper-14092.jpg">
                <div class="UserEntryVerticalWrapper">
                    <p class="userEntryHeader">Name</p>
                    <p class="userEntryValue">@project.Name</p>
                </div>
                <div class="UserEntryVerticalWrapper">
                    <p class="userEntryHeader">Besitzer</p>
                    <p class="userEntryValue">@project.Owner</p>
                </div>
                <div class="UserEntryVerticalWrapper">
                    <p class="userEntryHeader">Participators</p>
                    <p class="userEntryValue">@project.ParticipatorCount</p>
                </div>
            </a>
        }
    </div>
    <div class="UserListPaginationWrapper">
        <div class="UserPagination">
            <div class="UserPaginationBack">
                <p><</p>
            </div>
            <div class="UserPagionationNumbers">
                @for (int x = (int)ViewData["paginationMin"]; x < (int)ViewData["paginationMax"]; x++)
                {
                    <a asp-action="Index" asp-controller="User" asp-route-pagination="@x">@x</a>
                }
            </div>
            <div class="UserPaginationForward">
                <p>></p>
            </div>
        </div>
    </div>
</div>

<script>

document.getElementById("lookForUser").addEventListener("keyup",() =>{
                if (event.keyCode === 13) 
                {
                    let order = document.getElementById('userOrdering').value === "descend";
                    let val = document.getElementById("lookForUser").value;
                    let pagination = "";
                    let url = `@Url.Action("Index", "ProjectAdmin", new {}, ViewData["RequestScheme"].ToString())`;
                   window.location.href = 
                   url + "?query=" + val + (pagination ? ("&pagination=" + pagination) : ( "&pagination=0") ) + (order ? "&descend=true" : "");
                }
            });

</script>